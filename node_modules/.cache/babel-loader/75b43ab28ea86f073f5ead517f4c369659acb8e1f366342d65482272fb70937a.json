{"ast":null,"code":"var _jsxFileName = \"/Users/michaltalaga/Desktop/ZAWODOWE/INTERNETOWE/REACT/react-todo/src/components/TodoList.jsx\",\n  _s = $RefreshSig$();\nimport React from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction TodoList() {\n  _s();\n  const [tasks, setTasks] = useState([{\n    id: 1,\n    text: 'Doctor Appointment',\n    completed: true\n  }, {\n    id: 2,\n    text: 'Meeting at School',\n    completed: false\n  }]);\n  const [text, setText] = useState('');\n  function addTask(text) {\n    const newTask = {\n      id: Date.now(),\n      text,\n      completed: false\n    };\n    setTasks([...tasks, newTask]);\n    setText('');\n  }\n  function deleteTask(id) {\n    setTasks(tasks.filter(task => task.id !== id));\n  }\n  function toggleCompleted(id) {\n    setTasks(tasks.map(task => {\n      if (task.id === id) {\n        return {\n          ...task,\n          completed: !task.completed\n        };\n      } else {\n        return task;\n      }\n    }));\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"todo-list\",\n    children: [tasks.map(task => /*#__PURE__*/_jsxDEV(TodoItem, {\n      task: task,\n      deleteTask: deleteTask,\n      toggleCompleted: toggleCompleted\n    }, task.id, false, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 17\n    }, this)), /*#__PURE__*/_jsxDEV(\"input\", {\n      value: text,\n      onChange: e => setText(e.target.value)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: () => addTask(text),\n      children: \"Add\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 40,\n    columnNumber: 9\n  }, this);\n}\n_s(TodoList, \"p9OBkcHcB+Z0XxEtNLlnnDKHNpU=\");\n_c = TodoList;\nexport default TodoList;\nvar _c;\n$RefreshReg$(_c, \"TodoList\");","map":{"version":3,"names":["React","jsxDEV","_jsxDEV","TodoList","_s","tasks","setTasks","useState","id","text","completed","setText","addTask","newTask","Date","now","deleteTask","filter","task","toggleCompleted","map","className","children","TodoItem","fileName","_jsxFileName","lineNumber","columnNumber","value","onChange","e","target","onClick","_c","$RefreshReg$"],"sources":["/Users/michaltalaga/Desktop/ZAWODOWE/INTERNETOWE/REACT/react-todo/src/components/TodoList.jsx"],"sourcesContent":["import React from 'react';\n\nfunction TodoList() {\n    const [tasks, setTasks] = useState([\n        {\n            id: 1,\n            text: 'Doctor Appointment',\n            completed: true\n        },\n        {\n            id: 2,\n            text: 'Meeting at School',\n            completed: false\n        }\n    ]);\n\n    const [text, setText] = useState('');\n    function addTask(text) {\n        const newTask = {\n            id: Date.now(),\n            text,\n            completed: false\n        };\n        setTasks([...tasks, newTask]);\n        setText('');\n    }\n    function deleteTask(id) {\n        setTasks(tasks.filter(task => task.id !== id));\n    }\n    function toggleCompleted(id) {\n        setTasks(tasks.map(task => {\n            if (task.id === id) {\n                return {...task, completed: !task.completed };\n            } else {\n                return task;\n            }\n        }));\n    }\n    return (\n        <div className=\"todo-list\">\n            {tasks.map(task => (\n                <TodoItem\n                    key={task.id}\n                    task={task}\n                    deleteTask={deleteTask}\n                    toggleCompleted={toggleCompleted}\n                />\n            ))}\n            <input\n                value={text}\n                onChange={e => setText(e.target.value)}\n            />\n            <button onClick={() => addTask(text)}>Add</button>\n        </div>\n    );\n}\nexport default TodoList;"],"mappings":";;AAAA,OAAOA,KAAK,MAAM,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE1B,SAASC,QAAQA,CAAA,EAAG;EAAAC,EAAA;EAChB,MAAM,CAACC,KAAK,EAAEC,QAAQ,CAAC,GAAGC,QAAQ,CAAC,CAC/B;IACIC,EAAE,EAAE,CAAC;IACLC,IAAI,EAAE,oBAAoB;IAC1BC,SAAS,EAAE;EACf,CAAC,EACD;IACIF,EAAE,EAAE,CAAC;IACLC,IAAI,EAAE,mBAAmB;IACzBC,SAAS,EAAE;EACf,CAAC,CACJ,CAAC;EAEF,MAAM,CAACD,IAAI,EAAEE,OAAO,CAAC,GAAGJ,QAAQ,CAAC,EAAE,CAAC;EACpC,SAASK,OAAOA,CAACH,IAAI,EAAE;IACnB,MAAMI,OAAO,GAAG;MACZL,EAAE,EAAEM,IAAI,CAACC,GAAG,CAAC,CAAC;MACdN,IAAI;MACJC,SAAS,EAAE;IACf,CAAC;IACDJ,QAAQ,CAAC,CAAC,GAAGD,KAAK,EAAEQ,OAAO,CAAC,CAAC;IAC7BF,OAAO,CAAC,EAAE,CAAC;EACf;EACA,SAASK,UAAUA,CAACR,EAAE,EAAE;IACpBF,QAAQ,CAACD,KAAK,CAACY,MAAM,CAACC,IAAI,IAAIA,IAAI,CAACV,EAAE,KAAKA,EAAE,CAAC,CAAC;EAClD;EACA,SAASW,eAAeA,CAACX,EAAE,EAAE;IACzBF,QAAQ,CAACD,KAAK,CAACe,GAAG,CAACF,IAAI,IAAI;MACvB,IAAIA,IAAI,CAACV,EAAE,KAAKA,EAAE,EAAE;QAChB,OAAO;UAAC,GAAGU,IAAI;UAAER,SAAS,EAAE,CAACQ,IAAI,CAACR;QAAU,CAAC;MACjD,CAAC,MAAM;QACH,OAAOQ,IAAI;MACf;IACJ,CAAC,CAAC,CAAC;EACP;EACA,oBACIhB,OAAA;IAAKmB,SAAS,EAAC,WAAW;IAAAC,QAAA,GACrBjB,KAAK,CAACe,GAAG,CAACF,IAAI,iBACXhB,OAAA,CAACqB,QAAQ;MAELL,IAAI,EAAEA,IAAK;MACXF,UAAU,EAAEA,UAAW;MACvBG,eAAe,EAAEA;IAAgB,GAH5BD,IAAI,CAACV,EAAE;MAAAgB,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAIf,CACJ,CAAC,eACFzB,OAAA;MACI0B,KAAK,EAAEnB,IAAK;MACZoB,QAAQ,EAAEC,CAAC,IAAInB,OAAO,CAACmB,CAAC,CAACC,MAAM,CAACH,KAAK;IAAE;MAAAJ,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAC1C,CAAC,eACFzB,OAAA;MAAQ8B,OAAO,EAAEA,CAAA,KAAMpB,OAAO,CAACH,IAAI,CAAE;MAAAa,QAAA,EAAC;IAAG;MAAAE,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAQ,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACjD,CAAC;AAEd;AAACvB,EAAA,CArDQD,QAAQ;AAAA8B,EAAA,GAAR9B,QAAQ;AAsDjB,eAAeA,QAAQ;AAAC,IAAA8B,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}